=============git commands===========
created by:
Jhon Erlon Cocjin
DevOps is my DreamJob!!!!!!!!!!!!!!!!!!!!!!
	
%git init   = initialize repo
%git add .  = add file to the repo
%git commit -m "Message" = commit to repo and a message to update repository
%git status 
%git log
%git branch -M main
%git remote add origin https://github.com/BossErL/test-myself.git
%git push -u origin main



â€¦or push an existing repository from the command line
	%git remote add origin https://github.com/BossErL/test-myself.git
	%git branch -M master / main /<branch created>
	%git push -u origin master / main   = if u want to update contents in gitserver / hub


using SSH mechanish to login on Github
	%ssh-keygen -t rsa -C erlonmayan08@gmail.com


	%ssh -T git@github.com
to check if the ssh key is working

	%git branch -m master
change branch

	%git checkout 
command lets you navigate between the branches created by git branch

	%git clone Server_Repo_URL
if u want to clone repo from Server to Local

	%git log --pretty=oneline
to check commit history

	%git reset --soft <history ID> 
go back to history (need the ID of Commit History) but the changes in previous commit does not affect.
but you can do this if you did not yet push the files to the server

	%git revert <history ID>
undo particular commit

	%git branch -v 
shows the branch created and master branch

	%git branch -D <name of the branch>
Delete Branch locally

	%git push origin --delete <name of the branch>
Delete Branch on Server 

===============================================================

Docker cmds

Install Docker on your system
	%sudo yum install Docker 
or type Docker on terminal to check the cmd to install the Docker 

Start Docker Daemon
	%system ctl start Docker

cmd to remove Docker img
	%sudo Docker rmi <imageID>

cmd to download an img from Docker hub
	%sudo Docker pull <image_name>

cmd to run an img
	%sudo Docker run <image_name>

cmd to pull a Docker image from a Docker Hub
	%sudo Docker pull <image_name:tag>

cmd to build an image from a Dockerfile
	%sudo Docker build -t [image_name]:tag

cmd to shutdown the container
	%sudo Docker stop <container_ID>

cmd to acces a running container
	%sudo Docker exec it <container_id> bash

cmd to create container
	%sudo docker run -d -p0.0.0.0:80:80 <container_name:tag>

cmd to check container / running 
	%sudo Docker ps
	%sudo Docker ps -a

cmd to check image
	%sudo Docker images

cmd to run container and give a name
	%sudo docker run -it mysql /bin/bash

if container wont stop or cannot kill
	%sudo systemctl disable apparmor.service --now
	%sudo service apparmor teardown
	%sudo aa-remove-unknown
	%reboot

Cmd to create a new Docker image from the changes made in Container
	%Docker Container commit 

Cmd to copy files between the local filesystem and a Docker Container
	%Docker Container cp

cmd to remove all stopped containers
	%Docker Container prune

cmd to terminate one or more running containers
	%Docker Container Kill

cmd to run a new command in a running Containers
	%Docker Container exec

cmd to list Docker Containers
	%Docker Container ls

cmd to remove one or more containers
	%Docker Container rm

cmd to restart one or more containers
	%Docker Container restart

cmd to initialize manager on Docker Swarm
	%Docker swarm init --advertise-addr 192.168.2.151


Automate Search Run First test case using selenium
1. locate selenium
2. sudo apt install plocate
3. sudo app-get update
4. sudo apt install phyton3-pip
5. sudo pip install selenium
6. Open browser download selenium jar file
7. download chrome driver should be same google version and download linux64.zip


Docker  Compose

Cmd to install Docker Compose using pip:
	%pip install -U Docker Compose

Start all sevices with a command:
	%Docker Compose up

Start all servuices with a command:
	%Docker Compose down

Cmd to check the version of Docker Compose:
	%Docker-compose-v

Cmd to run Docker Compose file
	%Docker-compose up -d

cmd to list down all the process
	%Docker ps

cmd to scale a service
	%Docker Compose up -d --scale

cmd to use YAML files to configure app services
	%Docker Compose.yml

cmd to give permission in docker daemon socker
	%sudo chmod 666 /var/run/docker.sock

=========================================================
Kubernetes

1. sudo apt-get update
2. sudo apt-get install -y apt-transport-https
3. install Docker (sudo apt install docker.io)
4. enable docker run cmd 
	sudo systemctl start docker
	sudo systemctl enable docker
5. sudo apt-get install curl
6. sudo curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg| sudo apt-key add
7. sudo chmod 777 /etc/apt/sources.list.d/
8. make kubernetes.list (txt) file save it to com/etc/ept/sources.list
inside the file type:

"deb https://apt.kubernetes.io/ kubernetes-xenial main"
to check the file content 
cat /etc/apt/sources.list.d/kubernetes.list
it should display the content of kubernetes.list file
%echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
%sudo apt-get update
%sudo apt-get install -y kubelet kubeadm kubectl
%sudo apt-mark hold kubelet kubeadm kubectl
9.sudo apt-get update
10. install Kubernetes components
	sudo apt-get install -y kubelet kubeadm kubectl kubernestes-cni
11. Initialize master node
	sudo swapoff -a (to disable swapping on other devices)
	Initialize kubeadm
	sudo kubeadm init --ignore-preflight-errors=NumCPU




============================================================
Installing Maven and sample
1

	











Class A IP address
1.0.0.0 - 127.0.0.0

Class B IP address
128.0.0.0 - 191.255.255.255

Class C IP address
192.0.0.0 - 223.255.255.255

Class D IP address
224.0.0.0 - 239.255.255.255

Class E IP address
240.0.0.0 - 255.255.255.255

Automation Testing
https://www.youtube.com/watch?v=yFzv36r7Z8o

Maven Commands
https://jenkov.com/tutorials/maven/maven-commands.html

fix for deprecated key
https://www.youtube.com/watch?v=FyaZsbEOF54

fix for package jenkins has no installation candidate
https://www.youtube.com/watch?v=U8_IUZElONA

***install google in Ubuntu
Download
$wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
install
sudo dpkg -i google-chrome-stable_current_amd64.deb

***install Jenkins in Ubuntu











